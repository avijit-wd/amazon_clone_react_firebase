[{"/home/avijit/Desktop/personal_projects/amazon-clone/src/index.js":"1","/home/avijit/Desktop/personal_projects/amazon-clone/src/App.js":"2","/home/avijit/Desktop/personal_projects/amazon-clone/src/components/Header.js":"3","/home/avijit/Desktop/personal_projects/amazon-clone/src/components/Home.js":"4","/home/avijit/Desktop/personal_projects/amazon-clone/src/components/Product.js":"5","/home/avijit/Desktop/personal_projects/amazon-clone/src/components/Checkout.js":"6","/home/avijit/Desktop/personal_projects/amazon-clone/src/components/SubTotal.js":"7","/home/avijit/Desktop/personal_projects/amazon-clone/src/reducer.js":"8","/home/avijit/Desktop/personal_projects/amazon-clone/src/StateProvider.js":"9","/home/avijit/Desktop/personal_projects/amazon-clone/src/components/CheckoutProduct.js":"10","/home/avijit/Desktop/personal_projects/amazon-clone/src/components/Login.js":"11","/home/avijit/Desktop/personal_projects/amazon-clone/src/firebase.js":"12","/home/avijit/Desktop/personal_projects/amazon-clone/src/animations/index.js":"13","/home/avijit/Desktop/personal_projects/amazon-clone/src/components/Payment.js":"14","/home/avijit/Desktop/personal_projects/amazon-clone/src/axios.js":"15"},{"size":408,"mtime":1608400792932,"results":"16","hashOfConfig":"17"},{"size":1614,"mtime":1608579176606,"results":"18","hashOfConfig":"17"},{"size":1981,"mtime":1608572364695,"results":"19","hashOfConfig":"17"},{"size":2520,"mtime":1608481634496,"results":"20","hashOfConfig":"17"},{"size":1088,"mtime":1608477807088,"results":"21","hashOfConfig":"17"},{"size":1083,"mtime":1608531341745,"results":"22","hashOfConfig":"17"},{"size":1027,"mtime":1608532306466,"results":"23","hashOfConfig":"17"},{"size":922,"mtime":1608492477049,"results":"24","hashOfConfig":"17"},{"size":473,"mtime":1608401009390,"results":"25","hashOfConfig":"17"},{"size":1122,"mtime":1608531594520,"results":"26","hashOfConfig":"17"},{"size":2154,"mtime":1608491091011,"results":"27","hashOfConfig":"17"},{"size":577,"mtime":1608490180766,"results":"28","hashOfConfig":"17"},{"size":92,"mtime":1608530695353,"results":"29","hashOfConfig":"17"},{"size":4270,"mtime":1608583349117,"results":"30","hashOfConfig":"17"},{"size":154,"mtime":1608570419307,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"18ypwse",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/avijit/Desktop/personal_projects/amazon-clone/src/index.js",[],["71","72"],"/home/avijit/Desktop/personal_projects/amazon-clone/src/App.js",["73"],"import { useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Checkout from \"./components/Checkout\";\nimport Login from \"./components/Login\";\nimport Payment from \"./components/Payment\";\nimport { auth } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\n\nconst promise = loadStripe(\n  \"pk_test_51I0t2PHODZ8Pdw5PD2JEEF8byTjf2YM2wPkIuBmbrKIHOicSz8kRzgBOtW35ewIW3K7AnqgR8sigtDFEwet14jTe00FcYxrfC4\"\n);\nconst App = () => {\n  const [{ user }, dispatch] = useStateValue();\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser,\n        });\n      } else {\n        dispatch({\n          type: \"SET_USER\",\n          user: null,\n        });\n      }\n    });\n  }, [dispatch]);\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n          <Route exact path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n          <Route exact path=\"/payment\">\n            <Header />\n            <Elements stripe={promise}>\n              <Payment />\n            </Elements>\n          </Route>\n          <Route exact path=\"/login\" component={Login} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","/home/avijit/Desktop/personal_projects/amazon-clone/src/components/Header.js",["74"],"import React from \"react\";\nimport \"./Header.css\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\nimport { useStateValue } from \"../StateProvider\";\nimport { auth } from \"../firebase\";\n\nconst Header = () => {\n  const [{ basket, user }, dispatch] = useStateValue();\n\n  const handleAuthentication = () => {\n    if (user) {\n      auth.signOut();\n    }\n  };\n  return (\n    <div className=\"header\">\n      <Link to=\"/\">\n        <img\n          src=\"http://pngimg.com/uploads/amazon/amazon_PNG25.png\"\n          alt=\"amazon logo\"\n          className=\"header__logo\"\n        />\n      </Link>\n      <div className=\"header__search\">\n        <input type=\"text\" className=\"header__searchInput\" />\n        <SearchIcon className=\"header__searchIcon\" />\n      </div>\n\n      <div className=\"header__nav\">\n        <Link to={!user && \"/login\"}>\n          <div onClick={handleAuthentication} className=\"header__option\">\n            <span className=\"header__optionLineOne\">\n              Hello {!user ? \"Guest\" : user.email}\n            </span>\n            <span className=\"header__optionLineTwo\">\n              {user ? \"Sign Out\" : \"Sign In\"}\n            </span>\n          </div>\n        </Link>\n        <div className=\"header__option\">\n          <span className=\"header__optionLineOne\">Returns</span>\n          <span className=\"header__optionLineTwo\">& Order</span>\n        </div>\n\n        <div className=\"header__option\">\n          <span className=\"header__optionLineOne\">Now</span>\n          <span className=\"header__optionLineTwo\">Prime</span>\n        </div>\n\n        <Link to=\"/checkout\">\n          <div className=\"header__optionBasket\">\n            <ShoppingBasketIcon />\n            <span className=\"header__optionLineTwo header__basketCount\">\n              {basket?.length}\n            </span>\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","/home/avijit/Desktop/personal_projects/amazon-clone/src/components/Home.js",[],"/home/avijit/Desktop/personal_projects/amazon-clone/src/components/Product.js",["75"],"import React from \"react\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport \"./Product.css\";\nimport { useStateValue } from \"../StateProvider\";\n\nconst Product = ({ id, title, price, rating, image }) => {\n  const [{ basket }, dispatch] = useStateValue();\n  const addToBasket = () => {\n    // dispatch the item to data layer\n    dispatch({\n      type: \"ADD_TO_BASKET\",\n      payload: {\n        id,\n        title,\n        price,\n        rating,\n        image,\n      },\n    });\n  };\n  return (\n    <div className=\"product\">\n      <div className=\"product__info\">\n        <p>{title}</p>\n        <p className=\"product__price\">\n          <small>$</small>\n          <strong>{price}</strong>\n        </p>\n        <div className=\"product__rating\">\n          {Array(rating)\n            .fill()\n            .map((_, i) => (\n              <p>\n                <StarIcon className=\"product__star\" />\n              </p>\n            ))}\n        </div>\n      </div>\n      <img src={image} alt=\"\" />\n      <button onClick={addToBasket}>Add to Busket</button>\n    </div>\n  );\n};\n\nexport default Product;\n",["76","77"],"/home/avijit/Desktop/personal_projects/amazon-clone/src/components/Checkout.js",["78"],"import React from \"react\";\nimport SubTotal from \"./SubTotal\";\nimport \"./Checkout.css\";\nimport { useStateValue } from \"../StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\n\nconst Checkout = () => {\n  const [{ basket, user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"checkout\">\n      <div className=\"checkout__left\">\n        <img\n          src=\"https://images-na.ssl-images-amazon.com/images/G/01/credit/img16/CCMP/newstorefront/YACC-desktop-nonprime-banner3.png\"\n          alt=\"\"\n          className=\"checkout__ad\"\n        />\n        <div>\n          <h3>Hello, {user?.email}</h3>\n          <h2 className=\"checkout__title\">Your Shopping Basket</h2>\n\n          {basket.map((item) => (\n            <CheckoutProduct\n              id={item.id}\n              image={item.image}\n              price={item.price}\n              rating={item.rating}\n              title={item.title}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"checkout__right\">\n        <SubTotal />\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;\n","/home/avijit/Desktop/personal_projects/amazon-clone/src/components/SubTotal.js",["79"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./SubTotal.css\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { useStateValue } from \"../StateProvider\";\nimport { getBasketTotal } from \"../reducer\";\n\nconst SubTotal = () => {\n  const [{ basket }, dispatch] = useStateValue();\n  const history = useHistory();\n  return (\n    <div className=\"subtotal\">\n      <CurrencyFormat\n        renderText={(value) => (\n          <>\n            <p>\n              SubTotal({basket?.length} items): <strong>{value}</strong>\n            </p>\n            <small className=\"subTotal__gift\">\n              <input type=\"checkbox\" /> This contains a gift.\n            </small>\n          </>\n        )}\n        decimalScale={2}\n        value={getBasketTotal(basket)}\n        displayType={\"text\"}\n        thousandSeparator={true}\n        prefix={\"$\"}\n      />\n      <button onClick={(e) => history.push(\"/payment\")}>\n        Process to Checkout\n      </button>\n    </div>\n  );\n};\n\nexport default SubTotal;\n","/home/avijit/Desktop/personal_projects/amazon-clone/src/reducer.js",[],"/home/avijit/Desktop/personal_projects/amazon-clone/src/StateProvider.js",[],"/home/avijit/Desktop/personal_projects/amazon-clone/src/components/CheckoutProduct.js",["80","81"],"import React from \"react\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport \"./CheckoutProduct.css\";\nimport { useStateValue } from \"../StateProvider\";\n\nconst CheckoutProduct = ({ id, image, title, price, rating }) => {\n  const [{ basket }, dispatch] = useStateValue();\n\n  const removeFromBasket = (e) => {\n    dispatch({\n      type: \"REMOVE_FROM_BASKET\",\n      payload: id,\n    });\n  };\n  return (\n    <div className=\"checkoutProduct\">\n      <img className=\"checkoutProduct__image\" src={image} />\n\n      <div className=\"checkoutProduct__info\">\n        <p className=\"checkoutProduct__title\">{title}</p>\n        <p className=\"checkoutProduct__price\">\n          <small>$</small>\n          <strong>{price}</strong>\n        </p>\n        <div className=\"checkoutProduct__rating\">\n          {Array(rating)\n            .fill()\n            .map((_, i) => (\n              <p>\n                <StarIcon className=\"checkoutProduct__star\" />\n              </p>\n            ))}\n        </div>\n\n        <button onClick={removeFromBasket}>Remove from Basket</button>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutProduct;\n","/home/avijit/Desktop/personal_projects/amazon-clone/src/components/Login.js",[],"/home/avijit/Desktop/personal_projects/amazon-clone/src/firebase.js",[],"/home/avijit/Desktop/personal_projects/amazon-clone/src/animations/index.js",[],"/home/avijit/Desktop/personal_projects/amazon-clone/src/components/Payment.js",["82","83","84"],"import React, { useState, useEffect } from \"react\";\nimport \"./Payment.css\";\nimport { useStateValue } from \"../StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { getBasketTotal } from \"../reducer\";\nimport axios from \"../axios\";\n\nconst Payment = () => {\n  const [{ basket, user }, dispatch] = useStateValue();\n  const history = useHistory();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n\n  useEffect(() => {\n    // generate the special stripe secret which allows us to charge a customer\n    console.log(user);\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: \"post\",\n        // Stripe expects the total in a currencies subunits\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`,\n      });\n      setClientSecret(response.data.clientSecret);\n    };\n\n    getClientSecret();\n  }, [basket]);\n\n  console.log(\"THE SECRET IS >>>\", clientSecret);\n\n  const handleSubmit = async (event) => {\n    // do all the fancy stripe stuff...\n    event.preventDefault();\n    setProcessing(true);\n\n    const { paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n      },\n    });\n\n    setSucceeded(true);\n    setError(null);\n    setProcessing(false);\n\n    history.replace(\"/orders\");\n  };\n\n  const handleChange = (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  return (\n    <div className=\"payment\">\n      <div className=\"payment__container\">\n        <h1>\n          Checkout (<Link to=\"/checkout\">{basket?.length} items</Link>)\n        </h1>\n\n        {/* Payment section - delivery address */}\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Delivery Address</h3>\n          </div>\n          <div className=\"payment__address\">\n            <p>{user?.email}</p>\n            <p>123 React Lane</p>\n            <p>Los Angeles, CA</p>\n          </div>\n        </div>\n\n        {/* Payment section - Review Items */}\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Review items and delivery</h3>\n          </div>\n          <div className=\"payment__items\">\n            {basket.map((item) => (\n              <CheckoutProduct\n                id={item.id}\n                title={item.title}\n                image={item.image}\n                price={item.price}\n                rating={item.rating}\n              />\n            ))}\n          </div>\n        </div>\n\n        {/* Payment section - Payment method */}\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Payment Method</h3>\n          </div>\n          <div className=\"payment__details\">\n            {/* Stripe magic will go */}\n\n            <form onSubmit={handleSubmit}>\n              <CardElement onChange={handleChange} />\n\n              <div className=\"payment__priceContainer\">\n                <CurrencyFormat\n                  renderText={(value) => <h3>Order Total: {value}</h3>}\n                  decimalScale={2}\n                  value={getBasketTotal(basket)}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"$\"}\n                />\n                <button disabled={processing || disabled || succeeded}>\n                  <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                </button>\n              </div>\n\n              {/* Errors */}\n              {error && <div>{error}</div>}\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Payment;\n","/home/avijit/Desktop/personal_projects/amazon-clone/src/axios.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":18,"column":12,"nodeType":"91","messageId":"92","endLine":18,"endColumn":16},{"ruleId":"89","severity":1,"message":"93","line":10,"column":28,"nodeType":"91","messageId":"92","endLine":10,"endColumn":36},{"ruleId":"89","severity":1,"message":"94","line":7,"column":12,"nodeType":"91","messageId":"92","endLine":7,"endColumn":18},{"ruleId":"85","replacedBy":"95"},{"ruleId":"87","replacedBy":"96"},{"ruleId":"89","severity":1,"message":"93","line":8,"column":28,"nodeType":"91","messageId":"92","endLine":8,"endColumn":36},{"ruleId":"89","severity":1,"message":"93","line":9,"column":22,"nodeType":"91","messageId":"92","endLine":9,"endColumn":30},{"ruleId":"89","severity":1,"message":"94","line":7,"column":12,"nodeType":"91","messageId":"92","endLine":7,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":17,"column":7,"nodeType":"99","endLine":17,"endColumn":61},{"ruleId":"89","severity":1,"message":"93","line":12,"column":28,"nodeType":"91","messageId":"92","endLine":12,"endColumn":36},{"ruleId":"100","severity":1,"message":"101","line":37,"column":6,"nodeType":"102","endLine":37,"endColumn":14,"suggestions":"103"},{"ruleId":"89","severity":1,"message":"104","line":46,"column":13,"nodeType":"91","messageId":"92","endLine":46,"endColumn":26},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'basket' is assigned a value but never used.",["105"],["106"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["107"],"'paymentIntent' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [basket, user]",{"range":"110","text":"111"},[1325,1333],"[basket, user]"]